@model ForumUi.Models.CreateReplyViewModel
@{
    ViewData["Title"] = "Konu Detayları";
    var topic = (ForumUi.Models.TopicDto)ViewBag.Topic;
    var replies = (List<ForumUi.Models.ReplyDto>)ViewBag.Replies;
    bool isLoggedIn = ViewBag.IsLoggedIn ?? false;
    var likedReplies = ViewBag.LikedReplies as List<int> ?? new List<int>();
}

<h2>@topic.Title</h2>
<p>@topic.Content</p>
<small class="text-muted">@topic.Username - @topic.CreatedAt.ToString("dd.MM.yyyy HH:mm")</small>


<hr />

<h4>Yanıtlar (@replies.Count)</h4>

@if (replies.Any())
{
    @await Html.PartialAsync("_ReplyPartial", replies.Where(r => r.ParentReplyId == null).ToList())
}
else
{
    <div class="alert alert-info">
        <i class="bi bi-chat-square-text"></i> Henüz yanıt yok. İlk yanıtı sen yaz!
    </div>
}

<hr />

@if (isLoggedIn)
{
    <h4><i class="bi bi-chat-plus"></i> Yanıt Yaz</h4>
    <form asp-action="AddReply" method="post" id="mainReplyForm">
        <input type="hidden" name="TopicId" value="@ViewBag.TopicId" />
        <input type="hidden" name="ParentReplyId" value="" />
        <div class="mb-3">
            <label class="form-label">Yanıtınız</label>
            <textarea class="form-control" name="Content" rows="4" required placeholder="Düşüncelerinizi paylaşın..."></textarea>
        </div>
        <button type="submit" class="btn btn-success">
            <i class="bi bi-send"></i> Gönder
        </button>
        <button type="button" class="btn btn-secondary ms-2" onclick="cancelReply()" style="display:none;" id="cancelBtn">
            <i class="bi bi-x-circle"></i> İptal
        </button>
    </form>
}
else
{
    <div class="alert alert-warning">
        <i class="bi bi-info-circle"></i>
        <a href="/Auth/Login" class="alert-link">Giriş yaparak</a> yanıt yazabilirsiniz.
    </div>
}

@section Scripts {
    <script>
        let replyingTo = null;

        function replyToComment(replyId, username) {
            replyingTo = replyId;

            // Form başlığını güncelle
            document.querySelector('h4').innerHTML = `<i class="bi bi-reply"></i> ${username} kullanıcısına yanıt yazıyorsunuz`;

            // Gizli alanı güncelle
            document.querySelector('input[name="ParentReplyId"]').value = replyId;

            // Placeholder'ı güncelle
            document.querySelector('textarea[name="Content"]').placeholder = `${username} kullanıcısına yanıtınız...`;

            // İptal butonunu göster
            document.getElementById('cancelBtn').style.display = 'inline-block';

            // Form'a odaklan
            document.querySelector('textarea[name="Content"]').focus();

            // Form'a scroll yap
            document.getElementById('mainReplyForm').scrollIntoView({ behavior: 'smooth' });
        }

        function cancelReply() {
            replyingTo = null;

            // Form başlığını sıfırla
            document.querySelector('h4').innerHTML = '<i class="bi bi-chat-plus"></i> Yanıt Yaz';

            // Gizli alanı temizle
            document.querySelector('input[name="ParentReplyId"]').value = '';

            // Placeholder'ı sıfırla
            document.querySelector('textarea[name="Content"]').placeholder = 'Düşüncelerinizi paylaşın...';

            // İptal butonunu gizle
            document.getElementById('cancelBtn').style.display = 'none';

            // Textarea'yı temizle
            document.querySelector('textarea[name="Content"]').value = '';
        }

        function toggleReplies(replyId) {
            const repliesDiv = document.getElementById(`replies-${replyId}`);
            const toggleBtn = document.getElementById(`toggle-${replyId}`);
            const replyCount = repliesDiv.querySelectorAll('.child-reply').length;

            if (repliesDiv.style.display === 'none') {
                repliesDiv.style.display = 'block';
                repliesDiv.classList.add('show');
                repliesDiv.classList.remove('hide');
                toggleBtn.innerHTML = `<i class="bi bi-chevron-up"></i> ${replyCount} yanıt gizle`;
                toggleBtn.classList.remove('btn-outline-info');
                toggleBtn.classList.add('btn-info');
            } else {
                repliesDiv.classList.add('hide');
                repliesDiv.classList.remove('show');

                setTimeout(() => {
                    repliesDiv.style.display = 'none';
                }, 400);

                toggleBtn.innerHTML = `<i class="bi bi-chevron-down"></i> ${replyCount} yanıt`;
                toggleBtn.classList.remove('btn-info');
                toggleBtn.classList.add('btn-outline-info');
            }
        }
    </script>
}